#To compile with gsl, reactivate the following line (remove '#')
USE_GSL=

#To statically build the executables, uncomment the following line
STATIC=

ifdef USE_GSL
GSLLIB=-lgsl -lgslcblas
else
GSLLIB=
endif

LIBS=$(GSLLIB) -lboost_regex

CC=g++
SYSLIB=
INCLUDES=
#CPPFLAGS= $(USE_GSL) $(INCLUDES)
CPPFLAGS= -Wall -O3 $(USE_GSL) $(INCLUDES)
LDFLAGS=$(STATIC)
INSTALL_DIR=
INSTALL_LIB=
SRCS= ConjugateGTRModel.cpp Chrono.cpp BaseType.cpp Chain.cpp DrawTree.cpp GTRSubMatrix.cpp linalg.cpp PhyloProcess.cpp ProbModel.cpp Random.cpp RandomBranchSitePath.cpp RandomTypes.cpp DAGnode.cpp Sample.cpp SequenceAlignment.cpp SiteMapping.cpp BranchSitePath.cpp StateSpace.cpp SubMatrix.cpp TaxonSet.cpp Tree.cpp CodonSubMatrix.cpp MG3OmegaCodonSubMatrix.cpp CodonStateSpace.cpp CodonSequenceAlignment.cpp Move.cpp

OBJS=$(patsubst %.cpp,%.o,$(SRCS))
ALL_SRCS=$(wildcard *.cpp)
ALL_OBJS=$(patsubst %.cpp,%.o,$(ALL_SRCS))

PROGSDIR=../data
ALL= timelineclock readtimelineclock coevol readcoevol life readlife drawtree branchmodel readbranchmodel splitdata partpos coevol readcoevol timeline readtimeline ancov readancov logcont 
#ALL= readcont simucont cont simuinvwish priorchrono codevol sicodevol readcodevol readomega omega aamutsel readnhaa readnormflexdiscnhaa normflexdiscnhaa readdirflexdiscnhaa dirflexdiscnhaa readdiscnhaa discnhaa nhaa pca jc readgcpopsizeaamutsel readacgtpopsizeaamutsel gcpopsizeaamutsel acgtpopsizeaamutsel readsepmulaamutsel sepmulaamutsel bgcmutsel aamutsel readaamutsel drawtree 
#ALL= gcmixmg mixmg gcmatmixmg matmixmg readacgtpopsizeaaredmutsel acgtpopsizeaaredmutsel readgcpopsizeaaredmutsel gcpopsizeaaredmutsel readgcpopsizeaamutsel gcpopsizeaamutsel popsizeaamutsel bgchkymutsel bgcmutsel aamutsel readpopsizeaamutsel readaamutsel drawtree 
PROGS=$(addprefix $(PROGSDIR)/, $(ALL))

# If we are on a windows platform, executables are .exe files
# [S.Bigaret] we assume here that we are compiling w/ MinGW, not Cygwin
EXEEXT=
uname := $(shell uname -s 2>/dev/null)
ifeq (MINGW,$(findstring MINGW,$(uname)))
	EXEEXT=.exe
	PROGS=$(addsuffix $(EXEEXT), $(ALL))
endif

.PHONY: all clean
all: $(PROGS)

# Rules for generate the dependencies automatically

%.d: %.cpp
	@echo "Generating dependencies for $<..."; \
	 set -e; rm -f $@; $(CC) -MM $(CPPFLAGS) $< > $@.$$$$; \
	 sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; rm -f $@.$$$$


# Rules to create .o files from .cpp files
%.o: %.cpp %.d
	$(CC) -c $(CPPFLAGS) $*.cpp

# Include the dependencies unless the request was to clean eveything up
ifneq ($(MAKECMDGOALS),clean)
-include $(ALL_OBJS:.o=.d)
endif

# Targets

timelineclock$(EXEEXT): $(PROGSDIR)/timelineclock$(EXEEXT)
$(PROGSDIR)/timelineclock$(EXEEXT): TimeLineClock.o $(OBJS)
	$(CC) TimeLineClock.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readtimelineclock$(EXEEXT): $(PROGSDIR)/readtimelineclock$(EXEEXT)
$(PROGSDIR)/readtimelineclock$(EXEEXT): ReadTimeLineClock.o $(OBJS)
	$(CC) ReadTimeLineClock.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

life$(EXEEXT): $(PROGSDIR)/life$(EXEEXT)
$(PROGSDIR)/life$(EXEEXT): LifeHistoryRegression.o $(OBJS)
	$(CC) LifeHistoryRegression.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readlife$(EXEEXT): $(PROGSDIR)/readlife$(EXEEXT)
$(PROGSDIR)/readlife$(EXEEXT): ReadLifeHistoryRegression.o $(OBJS)
	$(CC) ReadLifeHistoryRegression.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

branchmodel$(EXEEXT): $(PROGSDIR)/branchmodel$(EXEEXT)
$(PROGSDIR)/branchmodel$(EXEEXT): Branch.o $(OBJS)
	$(CC) Branch.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readbranchmodel$(EXEEXT): $(PROGSDIR)/readbranchmodel$(EXEEXT)
$(PROGSDIR)/readbranchmodel$(EXEEXT): ReadBranch.o $(OBJS)
	$(CC) ReadBranch.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

fourfold$(EXEEXT): $(PROGSDIR)/fourfold$(EXEEXT)
$(PROGSDIR)/fourfold$(EXEEXT): FourFoldDegenerate.o $(OBJS)
	$(CC) FourFoldDegenerate.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

splitdata$(EXEEXT): $(PROGSDIR)/splitdata$(EXEEXT)
$(PROGSDIR)/splitdata$(EXEEXT): SplitData.o $(OBJS)
	$(CC) SplitData.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

partpos$(EXEEXT): $(PROGSDIR)/partpos$(EXEEXT)
$(PROGSDIR)/partpos$(EXEEXT): PartitionCodonPosition.o $(OBJS)
	$(CC) PartitionCodonPosition.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

logcont$(EXEEXT): $(PROGSDIR)/logcont$(EXEEXT)
$(PROGSDIR)/logcont$(EXEEXT): LogCont.o $(OBJS)
	$(CC) LogCont.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

bdpriorchrono$(EXEEXT): $(PROGSDIR)/bdpriorchrono$(EXEEXT)
$(PROGSDIR)/bdpriorchrono$(EXEEXT): BDPriorChrono.o $(OBJS)
	$(CC) BDPriorChrono.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

priorchrono$(EXEEXT): $(PROGSDIR)/priorchrono$(EXEEXT)
$(PROGSDIR)/priorchrono$(EXEEXT): PriorChrono.o $(OBJS)
	$(CC) PriorChrono.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

timeline$(EXEEXT): $(PROGSDIR)/timeline$(EXEEXT)
$(PROGSDIR)/timeline$(EXEEXT): TimeLineAncestralCovariance.o $(OBJS)
	$(CC) TimeLineAncestralCovariance.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readtimeline$(EXEEXT): $(PROGSDIR)/readtimeline$(EXEEXT)
$(PROGSDIR)/readtimeline$(EXEEXT): ReadTimeLineAncestralCovariance.o $(OBJS)
	$(CC) ReadTimeLineAncestralCovariance.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

ancov$(EXEEXT): $(PROGSDIR)/ancov$(EXEEXT)
$(PROGSDIR)/ancov$(EXEEXT): AncestralCovariance.o $(OBJS)
	$(CC) AncestralCovariance.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readlogn$(EXEEXT): $(PROGSDIR)/readlogn$(EXEEXT)
$(PROGSDIR)/readlogn$(EXEEXT): ReadLogN.o $(OBJS)
	$(CC) ReadLogN.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

logn$(EXEEXT): $(PROGSDIR)/logn$(EXEEXT)
$(PROGSDIR)/logn$(EXEEXT): LogN.o $(OBJS)
	$(CC) LogN.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

bdlogn$(EXEEXT): $(PROGSDIR)/bdlogn$(EXEEXT)
$(PROGSDIR)/bdlogn$(EXEEXT): BDLogN.o $(OBJS)
	$(CC) BDLogN.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

simucont$(EXEEXT): $(PROGSDIR)/simucont$(EXEEXT)
$(PROGSDIR)/simucont$(EXEEXT): SimuCont.o $(OBJS)
	$(CC) SimuCont.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readancov$(EXEEXT): $(PROGSDIR)/readancov$(EXEEXT)
$(PROGSDIR)/readancov$(EXEEXT): ReadAncestralCovariance.o $(OBJS)
	$(CC) ReadAncestralCovariance.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readcont$(EXEEXT): $(PROGSDIR)/readcont$(EXEEXT)
$(PROGSDIR)/readcont$(EXEEXT): ReadCont.o $(OBJS)
	$(CC) ReadCont.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

cont$(EXEEXT): $(PROGSDIR)/cont$(EXEEXT)
$(PROGSDIR)/cont$(EXEEXT): Cont.o $(OBJS)
	$(CC) Cont.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

drawtree$(EXEEXT): $(PROGSDIR)/drawtree$(EXEEXT)
$(PROGSDIR)/drawtree$(EXEEXT): DrawTreeMain.o $(OBJS)
	$(CC) DrawTreeMain.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readgamcodevol$(EXEEXT): $(PROGSDIR)/readgamcodevol$(EXEEXT)
$(PROGSDIR)/readgamcodevol$(EXEEXT): ReadGammaTreeOmegaMultivariate.o $(OBJS)
	$(CC) ReadGammaTreeOmegaMultivariate.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

gamcodevol$(EXEEXT): $(PROGSDIR)/gamcodevol$(EXEEXT)
$(PROGSDIR)/gamcodevol$(EXEEXT): GammaTreeOmegaMultivariate.o $(OBJS)
	$(CC) GammaTreeOmegaMultivariate.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readtam$(EXEEXT): $(PROGSDIR)/readtam$(EXEEXT)
$(PROGSDIR)/readtam$(EXEEXT): ReadTamura.o $(OBJS)
	$(CC) ReadTamura.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

tam$(EXEEXT): $(PROGSDIR)/tam$(EXEEXT)
$(PROGSDIR)/tam$(EXEEXT): Tamura.o $(OBJS)
	$(CC) Tamura.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

emilio$(EXEEXT): $(PROGSDIR)/emilio$(EXEEXT)
$(PROGSDIR)/emilio$(EXEEXT): Emilio.o $(OBJS)
	$(CC) Emilio.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readcoevol$(EXEEXT): $(PROGSDIR)/readcoevol$(EXEEXT)
$(PROGSDIR)/readcoevol$(EXEEXT): ReadBranchOmegaMultivariate.o $(OBJS)
	$(CC) ReadBranchOmegaMultivariate.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

coevol$(EXEEXT): $(PROGSDIR)/coevol$(EXEEXT)
$(PROGSDIR)/coevol$(EXEEXT): BranchOmegaMultivariate.o $(OBJS)
	$(CC) BranchOmegaMultivariate.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

simucoevol$(EXEEXT): $(PROGSDIR)/simucoevol$(EXEEXT)
$(PROGSDIR)/simucoevol$(EXEEXT): SimuBranchOmegaMultivariate.o $(OBJS)
	$(CC) SimuBranchOmegaMultivariate.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

readradcons$(EXEEXT): $(PROGSDIR)/readradcons$(EXEEXT)
$(PROGSDIR)/readradcons$(EXEEXT): ReadNHRadCons.o $(OBJS)
	$(CC) ReadNHRadCons.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@

radcons$(EXEEXT): $(PROGSDIR)/radcons$(EXEEXT)
$(PROGSDIR)/radcons$(EXEEXT): NHRadCons.o $(OBJS)
	$(CC) NHRadCons.o $(OBJS) $(LDFLAGS) $(LIBS) -o $@


clean:
	-rm -f *.o *.d *.d.*
	-rm -f $(PROGS)

